{"ast":null,"code":"var _jsxFileName = \"/usr/local/bin/React/clothing/ClothingSite/src/context/user.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext } from 'react';\nimport { useEffect, useReducer } from 'react';\nimport { onAuthStateChangedListener, createUserDocumentFromAuth } from '../utils/firebase.util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const userContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\nexport const USER_ACTION_TYPES = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER'\n};\n\nconst userReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case 'USER_ACTION_TYPES.SET_CURRENT_USER':\n      return { ...state,\n        currentUser: payload\n      };\n\n    default:\n      throw new Error('error');\n  }\n};\n\nconst INITIAL_STATE = {\n  currentUser: null\n};\nexport const UserProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //const [currentUser, setCurrentUser] = useState(null)\n  const [state, dispatch] = useReducer(userReducer, INITIAL_STATE);\n  const {\n    currentUser\n  } = state; // Destructing\n\n  const setCurrentUser = user => {\n    dispatch({\n      type: 'USER_ACTION_TYPES.SET_CURRENT_USER',\n      payload: user\n    });\n  };\n\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n\n      setCurrentUser(user);\n    });\n    return unsubscribe; //This is a function which ends the listener to run all the run.It is essential to invoke this to free  memory or else it will keep on Listening to the state changes\n  }, []);\n  return /*#__PURE__*/_jsxDEV(userContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n\n_s(UserProvider, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","onAuthStateChangedListener","createUserDocumentFromAuth","userContext","currentUser","setCurrentUser","USER_ACTION_TYPES","SET_CURRENT_USER","userReducer","state","action","type","payload","Error","INITIAL_STATE","UserProvider","children","dispatch","user","value","unsubscribe"],"sources":["/usr/local/bin/React/clothing/ClothingSite/src/context/user.context.jsx"],"sourcesContent":["import { createContext } from 'react'\nimport { useEffect, useReducer } from 'react'\nimport {\n  onAuthStateChangedListener,\n  createUserDocumentFromAuth,\n} from '../utils/firebase.util'\nexport const userContext = createContext({\n  currentUser: null,\n  setCurrentUser: () => null,\n})\n\nexport const USER_ACTION_TYPES = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\n}\n\nconst userReducer = (state, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case 'USER_ACTION_TYPES.SET_CURRENT_USER':\n      return {\n        ...state,\n        currentUser: payload,\n      }\n    default:\n      throw new Error('error')\n  }\n}\nconst INITIAL_STATE = {\n  currentUser: null,\n}\nexport const UserProvider = ({ children }) => {\n  //const [currentUser, setCurrentUser] = useState(null)\n  const [state, dispatch] = useReducer(userReducer, INITIAL_STATE)\n  const { currentUser } = state // Destructing\n  const setCurrentUser = (user) => {\n    dispatch({ type: 'USER_ACTION_TYPES.SET_CURRENT_USER', payload: user })\n  }\n  const value = { currentUser, setCurrentUser }\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener((user) => {\n      if (user) {\n        createUserDocumentFromAuth(user)\n      }\n      setCurrentUser(user)\n    })\n    return unsubscribe //This is a function which ends the listener to run all the run.It is essential to invoke this to free  memory or else it will keep on Listening to the state changes\n  }, [])\n  return <userContext.Provider value={value}>{children}</userContext.Provider>\n}\n"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SACEC,0BADF,EAEEC,0BAFF,QAGO,wBAHP;;AAIA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EACvCM,WAAW,EAAE,IAD0B;EAEvCC,cAAc,EAAE,MAAM;AAFiB,CAAD,CAAjC;AAKP,OAAO,MAAMC,iBAAiB,GAAG;EAC/BC,gBAAgB,EAAE;AADa,CAA1B;;AAIP,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBF,MAA1B;;EACA,QAAQC,IAAR;IACE,KAAK,oCAAL;MACE,OAAO,EACL,GAAGF,KADE;QAELL,WAAW,EAAEQ;MAFR,CAAP;;IAIF;MACE,MAAM,IAAIC,KAAJ,CAAU,OAAV,CAAN;EAPJ;AASD,CAXD;;AAYA,MAAMC,aAAa,GAAG;EACpBV,WAAW,EAAE;AADO,CAAtB;AAGA,OAAO,MAAMW,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C;EACA,MAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBjB,UAAU,CAACQ,WAAD,EAAcM,aAAd,CAApC;EACA,MAAM;IAAEV;EAAF,IAAkBK,KAAxB,CAH4C,CAGd;;EAC9B,MAAMJ,cAAc,GAAIa,IAAD,IAAU;IAC/BD,QAAQ,CAAC;MAAEN,IAAI,EAAE,oCAAR;MAA8CC,OAAO,EAAEM;IAAvD,CAAD,CAAR;EACD,CAFD;;EAGA,MAAMC,KAAK,GAAG;IAAEf,WAAF;IAAeC;EAAf,CAAd;EACAN,SAAS,CAAC,MAAM;IACd,MAAMqB,WAAW,GAAGnB,0BAA0B,CAAEiB,IAAD,IAAU;MACvD,IAAIA,IAAJ,EAAU;QACRhB,0BAA0B,CAACgB,IAAD,CAA1B;MACD;;MACDb,cAAc,CAACa,IAAD,CAAd;IACD,CAL6C,CAA9C;IAMA,OAAOE,WAAP,CAPc,CAOK;EACpB,CARQ,EAQN,EARM,CAAT;EASA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAED,KAA7B;IAAA,UAAqCH;EAArC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAlBM;;GAAMD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}