{"ast":null,"code":"var _jsxFileName = \"/usr/local/bin/React/clothing/ClothingSite/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartopen: true,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  decreaseItemInCart: () => {},\n  addItemToCart: () => {},\n  deleteItemInCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nconst INITIAL_STATE = {\n  isCartopen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\n\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case 'SET_CART_ITEMS':\n      return { ...state,\n        payload\n      };\n\n    default:\n      throw new Error(`Unhandled type of ${type} in CartReducer`);\n  }\n};\n\nconst addCartItems = (cartItems, productToAdd) => {\n  const existingCarItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCarItem) return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n    quantity: cartItem.quantity + 1\n  } : cartItem);\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst decreaseCartItem = (cartItems, productToDecrese) => {\n  const existingCarItem = cartItems.find(cartItem => cartItem.id === productToDecrese.id);\n\n  if (existingCarItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== productToDecrese.id);\n  }\n\n  return cartItems.map(cartItem => cartItem.id === productToDecrese.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst deleteCartItem = (cartItems, productToDelete) => {\n  return cartItems.filter(cartItem => cartItem.id !== productToDelete.id);\n};\n\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [isCartOpen, setIsCartOpen] = useState(false)\n  // const [cartItems, setCartItems] = useState([])\n  // const [cartCount, setCartCount] = useState(0)\n  // const [cartTotal, setCartTotal] = useState(0)\n  const [{\n    cartItems,\n    isCartOpen,\n    cartCount,\n    cartTotal\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE); // useEffect(() => {\n  //   const newCartCount = cartItems.reduce(\n  //     (total, cartItem) => total + cartItem.quantity,\n  //     0\n  //   )\n  //   setCartCount(newCartCount)\n  // }, [cartItems])\n  // useEffect(() => {\n  //   const newCartTotal = cartItems.reduce(\n  //     (total, cartItem) => total + cartItem.quantity * cartItem.price,\n  //     0\n  //   )\n  //   setCartTotal(newCartTotal)\n  // }, [cartItems])\n\n  const updateCartItemsReducer = newCartItems => {\n    console.log('runn');\n    const newCartCount = newCartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    const newCartTotal = newCartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    dispatch({\n      type: 'SET_CART_ITEMS',\n      payload: {\n        cartItems: newCartItems,\n        cartTotal: newCartTotal,\n        cartCount: newCartCount\n      }\n    });\n  };\n\n  const addItemToCart = productToAdd => {\n    const newCartItems = addCartItems(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const decreaseItemInCart = productToDecrese => {\n    const newCartItems = decreaseCartItem(cartItems, productToDecrese);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const deleteItemInCart = productToDelete => {\n    const newCartItems = deleteCartItem(cartItems, productToDelete);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen: () => true,\n    addItemToCart,\n    cartItems,\n    cartTotal,\n    setCartTotal: 0,\n    cartCount,\n    decreaseItemInCart,\n    deleteItemInCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"3paH1pqC9GUp4D7OqFgw8GuVIi0=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useReducer","CartContext","isCartopen","setIsCartOpen","cartItems","decreaseItemInCart","addItemToCart","deleteItemInCart","cartCount","cartTotal","INITIAL_STATE","cartReducer","state","action","type","payload","Error","addCartItems","productToAdd","existingCarItem","find","cartItem","id","map","quantity","decreaseCartItem","productToDecrese","filter","deleteCartItem","productToDelete","CartProvider","children","isCartOpen","dispatch","updateCartItemsReducer","newCartItems","console","log","newCartCount","reduce","total","newCartTotal","price","value","setCartTotal"],"sources":["/usr/local/bin/React/clothing/ClothingSite/src/context/cart.context.jsx"],"sourcesContent":["import { createContext, useReducer } from 'react'\n\nexport const CartContext = createContext({\n  isCartopen: true,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  decreaseItemInCart: () => {},\n  addItemToCart: () => {},\n  deleteItemInCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n})\n\nconst INITIAL_STATE = {\n  isCartopen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0,\n}\nconst cartReducer = (state, action) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case 'SET_CART_ITEMS':\n      return {\n        ...state,\n        payload,\n      }\n\n    default:\n      throw new Error(`Unhandled type of ${type} in CartReducer`)\n  }\n}\nconst addCartItems = (cartItems, productToAdd) => {\n  const existingCarItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  )\n  if (existingCarItem)\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    )\n\n  return [...cartItems, { ...productToAdd, quantity: 1 }]\n}\nconst decreaseCartItem = (cartItems, productToDecrese) => {\n  const existingCarItem = cartItems.find(\n    (cartItem) => cartItem.id === productToDecrese.id\n  )\n  if (existingCarItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== productToDecrese.id)\n  }\n  return cartItems.map((cartItem) =>\n    cartItem.id === productToDecrese.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  )\n}\nconst deleteCartItem = (cartItems, productToDelete) => {\n  return cartItems.filter((cartItem) => cartItem.id !== productToDelete.id)\n}\n\nexport const CartProvider = ({ children }) => {\n  // const [isCartOpen, setIsCartOpen] = useState(false)\n  // const [cartItems, setCartItems] = useState([])\n  // const [cartCount, setCartCount] = useState(0)\n  // const [cartTotal, setCartTotal] = useState(0)\n  const [{ cartItems, isCartOpen, cartCount, cartTotal }, dispatch] =\n    useReducer(cartReducer, INITIAL_STATE)\n\n  // useEffect(() => {\n  //   const newCartCount = cartItems.reduce(\n  //     (total, cartItem) => total + cartItem.quantity,\n  //     0\n  //   )\n  //   setCartCount(newCartCount)\n  // }, [cartItems])\n\n  // useEffect(() => {\n  //   const newCartTotal = cartItems.reduce(\n  //     (total, cartItem) => total + cartItem.quantity * cartItem.price,\n  //     0\n  //   )\n  //   setCartTotal(newCartTotal)\n  // }, [cartItems])\n  const updateCartItemsReducer = (newCartItems) => {\n    console.log('runn')\n\n    const newCartCount = newCartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    )\n    const newCartTotal = newCartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    )\n    dispatch({\n      type: 'SET_CART_ITEMS',\n      payload: {\n        cartItems: newCartItems,\n        cartTotal: newCartTotal,\n        cartCount: newCartCount,\n      },\n    })\n  }\n\n  const addItemToCart = (productToAdd) => {\n    const newCartItems = addCartItems(cartItems, productToAdd)\n    updateCartItemsReducer(newCartItems)\n  }\n  const decreaseItemInCart = (productToDecrese) => {\n    const newCartItems = decreaseCartItem(cartItems, productToDecrese)\n    updateCartItemsReducer(newCartItems)\n  }\n  const deleteItemInCart = (productToDelete) => {\n    const newCartItems = deleteCartItem(cartItems, productToDelete)\n    updateCartItemsReducer(newCartItems)\n  }\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen: () => true,\n    addItemToCart,\n    cartItems,\n    cartTotal,\n    setCartTotal: 0,\n    cartCount,\n    decreaseItemInCart,\n    deleteItemInCart,\n  }\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}