{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, FacebookAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD4r88vRk2kugNBbQ6MbPlBCsx8Q9Y-Fl0',\n  authDomain: 'clothing-2d666.firebaseapp.com',\n  projectId: 'clothing-2d666',\n  storageBucket: 'clothing-2d666.appspot.com',\n  messagingSenderId: '481215764667',\n  appId: '1:481215764667:web:34f8427a84dc25887b319e'\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\nconst facebookProvider = new FacebookAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nfacebookProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const signInWithFacebookPopup = () => signInWithPopup(auth, facebookProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userDocRef;\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","FacebookAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","facebookProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","signInWithFacebookPopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message"],"sources":["/usr/local/bin/React/clothing/ClothingSite/src/utils/firebase.util.jsx"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app'\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  FacebookAuthProvider,\n} from 'firebase/auth'\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD4r88vRk2kugNBbQ6MbPlBCsx8Q9Y-Fl0',\n  authDomain: 'clothing-2d666.firebaseapp.com',\n  projectId: 'clothing-2d666',\n  storageBucket: 'clothing-2d666.appspot.com',\n  messagingSenderId: '481215764667',\n  appId: '1:481215764667:web:34f8427a84dc25887b319e',\n}\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig)\nconst googleProvider = new GoogleAuthProvider()\nconst facebookProvider = new FacebookAuthProvider()\n\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n})\nfacebookProvider.setCustomParameters({\n  prompt: 'select_account',\n})\nexport const auth = getAuth()\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider)\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider)\nexport const signInWithFacebookPopup = () =>\n  signInWithPopup(auth, facebookProvider)\n\nexport const db = getFirestore()\nexport const createUserDocumentFromAuth = async (userAuth) => {\n  const userDocRef = doc(db, 'users', userAuth.uid)\n\n  const userSnapshot = await getDoc(userDocRef)\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth\n    const createdAt = new Date()\n\n    try {\n      await setDoc(userDocRef, { displayName, email, createdAt })\n    } catch (error) {\n      console.log('error creating user', error.message)\n    }\n  }\n  return userDocRef\n}\n"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,oBALF,QAMO,eANP;AAOA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD,C,CACA;AACA;AAEA;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,gCAFS;EAGrBC,SAAS,EAAE,gBAHU;EAIrBC,aAAa,EAAE,4BAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAD,CAAjC;AACA,MAAMQ,cAAc,GAAG,IAAId,kBAAJ,EAAvB;AACA,MAAMe,gBAAgB,GAAG,IAAId,oBAAJ,EAAzB;AAEAa,cAAc,CAACE,mBAAf,CAAmC;EACjCC,MAAM,EAAE;AADyB,CAAnC;AAGAF,gBAAgB,CAACC,mBAAjB,CAAqC;EACnCC,MAAM,EAAE;AAD2B,CAArC;AAGA,OAAO,MAAMC,IAAI,GAAGrB,OAAO,EAApB;AACP,OAAO,MAAMsB,qBAAqB,GAAG,MAAMpB,eAAe,CAACmB,IAAD,EAAOJ,cAAP,CAAnD;AACP,OAAO,MAAMM,wBAAwB,GAAG,MACtCtB,kBAAkB,CAACoB,IAAD,EAAOJ,cAAP,CADb;AAEP,OAAO,MAAMO,uBAAuB,GAAG,MACrCtB,eAAe,CAACmB,IAAD,EAAOH,gBAAP,CADV;AAGP,OAAO,MAAMO,EAAE,GAAGpB,YAAY,EAAvB;AACP,OAAO,MAAMqB,0BAA0B,GAAG,MAAOC,QAAP,IAAoB;EAC5D,MAAMC,UAAU,GAAGtB,GAAG,CAACmB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;EAEA,MAAMC,YAAY,GAAG,MAAMvB,MAAM,CAACqB,UAAD,CAAjC;;EAEA,IAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;IAC1B,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBN,QAA/B;IACA,MAAMO,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACF,MAAM3B,MAAM,CAACoB,UAAD,EAAa;QAAEI,WAAF;QAAeC,KAAf;QAAsBC;MAAtB,CAAb,CAAZ;IACD,CAFD,CAEE,OAAOE,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;IACD;EACF;;EACD,OAAOX,UAAP;AACD,CAhBM"},"metadata":{},"sourceType":"module"}